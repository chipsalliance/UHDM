@0xfff7299129556877;

struct ObjIndexType {
   index @0 : UInt64;
   type  @1 : UInt32;
}

struct UhdmRoot {
  designs @0 : List(Design);
  symbols @1 : List(Text);
  factoryProcess @2 :List(Process);
  factoryPropertydecl @3 :List(Propertydecl);
  factorySequencedecl @4 :List(Sequencedecl);
  factoryVirtualinterfacevar @5 :List(Virtualinterfacevar);
  factoryLetdecl @6 :List(Letdecl);
  factoryBegin @7 :List(Begin);
  factoryNamedbegin @8 :List(Namedbegin);
  factoryNamedfork @9 :List(Namedfork);
  factoryForkstmt @10 :List(Forkstmt);
  factoryForstmt @11 :List(Forstmt);
  factoryForeachstmt @12 :List(Foreachstmt);
  factoryGenscope @13 :List(Genscope);
  factoryDistribution @14 :List(Distribution);
  factoryOperation @15 :List(Operation);
  factoryPartselect @16 :List(Partselect);
  factoryRefobj @17 :List(Refobj);
  factoryVarselect @18 :List(Varselect);
  factoryShortrealvar @19 :List(Shortrealvar);
  factoryRealvar @20 :List(Realvar);
  factoryBytevar @21 :List(Bytevar);
  factoryShortintvar @22 :List(Shortintvar);
  factoryIntvar @23 :List(Intvar);
  factoryLongintvar @24 :List(Longintvar);
  factoryIntegervar @25 :List(Integervar);
  factoryTimevar @26 :List(Timevar);
  factoryArrayvar @27 :List(Arrayvar);
  factoryPackedarrayvar @28 :List(Packedarrayvar);
  factoryBitvar @29 :List(Bitvar);
  factoryLogicvar @30 :List(Logicvar);
  factoryStructvar @31 :List(Structvar);
  factoryUnionvar @32 :List(Unionvar);
  factoryEnumvar @33 :List(Enumvar);
  factoryStringvar @34 :List(Stringvar);
  factoryChandlevar @35 :List(Chandlevar);
  factoryClassvar @36 :List(Classvar);
  factoryVarbit @37 :List(Varbit);
  factoryTask @38 :List(Task);
  factoryFunction @39 :List(Function);
  factoryModport @40 :List(Modport);
  factoryInterfacetfdecl @41 :List(Interfacetfdecl);
  factoryContassign @42 :List(Contassign);
  factoryPort @43 :List(Port);
  factoryPortbit @44 :List(Portbit);
  factoryPrimitive @45 :List(Primitive);
  factoryModpath @46 :List(Modpath);
  factoryTchk @47 :List(Tchk);
  factoryDefparam @48 :List(Defparam);
  factoryRange @49 :List(Range);
  factoryUdpdefn @50 :List(Udpdefn);
  factoryIodecl @51 :List(Iodecl);
  factoryAliasstmt @52 :List(Aliasstmt);
  factoryClockingblock @53 :List(Clockingblock);
  factoryParamassign @54 :List(Paramassign);
  factoryInterfacearray @55 :List(Interfacearray);
  factoryProgramarray @56 :List(Programarray);
  factoryModulearray @57 :List(Modulearray);
  factoryGatearray @58 :List(Gatearray);
  factorySwitcharray @59 :List(Switcharray);
  factoryUdparray @60 :List(Udparray);
  factoryPrimterm @61 :List(Primterm);
  factoryPathterm @62 :List(Pathterm);
  factoryTchkterm @63 :List(Tchkterm);
  factoryNetbit @64 :List(Netbit);
  factoryStructnet @65 :List(Structnet);
  factoryEnumnet @66 :List(Enumnet);
  factoryIntegernet @67 :List(Integernet);
  factoryTimenet @68 :List(Timenet);
  factoryLogicnet @69 :List(Logicnet);
  factoryArraynet @70 :List(Arraynet);
  factoryPackedarraynet @71 :List(Packedarraynet);
  factoryNamedevent @72 :List(Namedevent);
  factoryNamedeventarray @73 :List(Namedeventarray);
  factorySpecparam @74 :List(Specparam);
  factoryClassdefn @75 :List(Classdefn);
  factoryClasstypespec @76 :List(Classtypespec);
  factoryClassobj @77 :List(Classobj);
  factoryInterface @78 :List(Interface);
  factoryProgram @79 :List(Program);
  factoryPackage @80 :List(Package);
  factoryModule @81 :List(Module);
  factoryDesign @82 :List(Design);

}


struct Process {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Propertydecl {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Sequencedecl {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Virtualinterfacevar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Letdecl {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Begin {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
stmts @4 :List(ObjIndexType);
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
concurrentassertions @7 :List(ObjIndexType);
variables @8 :List(ObjIndexType);
parameters @9 :List(ObjIndexType);
scopes @10 :List(ObjIndexType);
typespecs @11 :List(ObjIndexType);
propertydecls @12 :List(UInt64);
sequencedecls @13 :List(UInt64);
namedevents @14 :List(UInt64);
namedeventarrays @15 :List(UInt64);
virtualinterfacevars @16 :List(UInt64);
logicvar @17 :List(UInt64);
arrayvar @18 :List(UInt64);
arrayvarmem @19 :List(UInt64);
letdecls @20 :List(UInt64);
instanceitems @21 :List(ObjIndexType);
}
struct Namedbegin {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
stmts @4 :List(ObjIndexType);
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
concurrentassertions @7 :List(ObjIndexType);
variables @8 :List(ObjIndexType);
parameters @9 :List(ObjIndexType);
scopes @10 :List(ObjIndexType);
typespecs @11 :List(ObjIndexType);
propertydecls @12 :List(UInt64);
sequencedecls @13 :List(UInt64);
namedevents @14 :List(UInt64);
namedeventarrays @15 :List(UInt64);
virtualinterfacevars @16 :List(UInt64);
logicvar @17 :List(UInt64);
arrayvar @18 :List(UInt64);
arrayvarmem @19 :List(UInt64);
letdecls @20 :List(UInt64);
instanceitems @21 :List(ObjIndexType);
}
struct Namedfork {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiJoinType @4 :Int64;
stmts @5 :List(ObjIndexType);
vpiName @6 :UInt64;
vpiFullName @7 :UInt64;
concurrentassertions @8 :List(ObjIndexType);
variables @9 :List(ObjIndexType);
parameters @10 :List(ObjIndexType);
scopes @11 :List(ObjIndexType);
typespecs @12 :List(ObjIndexType);
propertydecls @13 :List(UInt64);
sequencedecls @14 :List(UInt64);
namedevents @15 :List(UInt64);
namedeventarrays @16 :List(UInt64);
virtualinterfacevars @17 :List(UInt64);
logicvar @18 :List(UInt64);
arrayvar @19 :List(UInt64);
arrayvarmem @20 :List(UInt64);
letdecls @21 :List(UInt64);
instanceitems @22 :List(ObjIndexType);
}
struct Forkstmt {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiJoinType @4 :Int64;
stmts @5 :List(ObjIndexType);
vpiName @6 :UInt64;
vpiFullName @7 :UInt64;
concurrentassertions @8 :List(ObjIndexType);
variables @9 :List(ObjIndexType);
parameters @10 :List(ObjIndexType);
scopes @11 :List(ObjIndexType);
typespecs @12 :List(ObjIndexType);
propertydecls @13 :List(UInt64);
sequencedecls @14 :List(UInt64);
namedevents @15 :List(UInt64);
namedeventarrays @16 :List(UInt64);
virtualinterfacevars @17 :List(UInt64);
logicvar @18 :List(UInt64);
arrayvar @19 :List(UInt64);
arrayvarmem @20 :List(UInt64);
letdecls @21 :List(UInt64);
instanceitems @22 :List(ObjIndexType);
}
struct Forstmt {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
concurrentassertions @6 :List(ObjIndexType);
variables @7 :List(ObjIndexType);
parameters @8 :List(ObjIndexType);
scopes @9 :List(ObjIndexType);
typespecs @10 :List(ObjIndexType);
propertydecls @11 :List(UInt64);
sequencedecls @12 :List(UInt64);
namedevents @13 :List(UInt64);
namedeventarrays @14 :List(UInt64);
virtualinterfacevars @15 :List(UInt64);
logicvar @16 :List(UInt64);
arrayvar @17 :List(UInt64);
arrayvarmem @18 :List(UInt64);
letdecls @19 :List(UInt64);
instanceitems @20 :List(ObjIndexType);
}
struct Foreachstmt {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
concurrentassertions @6 :List(ObjIndexType);
variables @7 :List(ObjIndexType);
parameters @8 :List(ObjIndexType);
scopes @9 :List(ObjIndexType);
typespecs @10 :List(ObjIndexType);
propertydecls @11 :List(UInt64);
sequencedecls @12 :List(UInt64);
namedevents @13 :List(UInt64);
namedeventarrays @14 :List(UInt64);
virtualinterfacevars @15 :List(UInt64);
logicvar @16 :List(UInt64);
arrayvar @17 :List(UInt64);
arrayvarmem @18 :List(UInt64);
letdecls @19 :List(UInt64);
instanceitems @20 :List(ObjIndexType);
}
struct Genscope {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
concurrentassertions @6 :List(ObjIndexType);
variables @7 :List(ObjIndexType);
parameters @8 :List(ObjIndexType);
scopes @9 :List(ObjIndexType);
typespecs @10 :List(ObjIndexType);
propertydecls @11 :List(UInt64);
sequencedecls @12 :List(UInt64);
namedevents @13 :List(UInt64);
namedeventarrays @14 :List(UInt64);
virtualinterfacevars @15 :List(UInt64);
logicvar @16 :List(UInt64);
arrayvar @17 :List(UInt64);
arrayvarmem @18 :List(UInt64);
letdecls @19 :List(UInt64);
instanceitems @20 :List(ObjIndexType);
}
struct Distribution {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Operation {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiOpType @4 :Int64;
operands @5 :List(ObjIndexType);
vpiDecompile @6 :UInt64;
vpiSize @7 :Int64;
}
struct Partselect {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Refobj {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
vpiDefName @6 :UInt64;
vpiGeneric @7 :Bool;
ports @8 :List(ObjIndexType);
typespec @9 :ObjIndexType;
instance @10 :ObjIndexType;
taskfunc @11 :ObjIndexType;
actualgroup @12 :ObjIndexType;
}
struct Varselect {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Shortrealvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Realvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Bytevar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Shortintvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Intvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Longintvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Integervar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Timevar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Arrayvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayType @4 :Int64;
leftexpr @5 :ObjIndexType;
rightexpr @6 :ObjIndexType;
variables @7 :List(ObjIndexType);
varselects @8 :UInt64;
ranges @9 :List(UInt64);
vpiArrayMember @10 :Bool;
vpiName @11 :UInt64;
vpiFullName @12 :UInt64;
vpiSigned @13 :Bool;
vpiSize @14 :Int64;
vpiAutomatic @15 :Bool;
vpiAllocScheme @16 :Int64;
vpiConstantVariable @17 :Bool;
vpiIsRandomized @18 :Bool;
vpiRandType @19 :Int64;
vpiStructUnionMember @20 :Bool;
vpiScalar @21 :Bool;
vpiVisibility @22 :Int64;
vpiVector @23 :Bool;
ports @24 :List(ObjIndexType);
variabledrivers @25 :List(ObjIndexType);
variableloads @26 :List(ObjIndexType);
typespec @27 :ObjIndexType;
instance @28 :ObjIndexType;
scope @29 :ObjIndexType;
expr @30 :ObjIndexType;
indexes @31 :List(ObjIndexType);
primterms @32 :List(UInt64);
contassigns @33 :List(UInt64);
pathterm @34 :UInt64;
tchkterm @35 :UInt64;
module @36 :UInt64;
}
struct Packedarrayvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
leftexpr @4 :ObjIndexType;
rightexpr @5 :ObjIndexType;
ranges @6 :List(UInt64);
varbits @7 :List(UInt64);
vpiArrayMember @8 :Bool;
vpiName @9 :UInt64;
vpiFullName @10 :UInt64;
vpiSigned @11 :Bool;
vpiSize @12 :Int64;
vpiAutomatic @13 :Bool;
vpiAllocScheme @14 :Int64;
vpiConstantVariable @15 :Bool;
vpiIsRandomized @16 :Bool;
vpiRandType @17 :Int64;
vpiStructUnionMember @18 :Bool;
vpiScalar @19 :Bool;
vpiVisibility @20 :Int64;
vpiVector @21 :Bool;
ports @22 :List(ObjIndexType);
variabledrivers @23 :List(ObjIndexType);
variableloads @24 :List(ObjIndexType);
typespec @25 :ObjIndexType;
instance @26 :ObjIndexType;
scope @27 :ObjIndexType;
expr @28 :ObjIndexType;
indexes @29 :List(ObjIndexType);
primterms @30 :List(UInt64);
contassigns @31 :List(UInt64);
pathterm @32 :UInt64;
tchkterm @33 :UInt64;
module @34 :UInt64;
}
struct Bitvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
leftexpr @4 :ObjIndexType;
rightexpr @5 :ObjIndexType;
ranges @6 :List(UInt64);
varbits @7 :List(UInt64);
vpiArrayMember @8 :Bool;
vpiName @9 :UInt64;
vpiFullName @10 :UInt64;
vpiSigned @11 :Bool;
vpiSize @12 :Int64;
vpiAutomatic @13 :Bool;
vpiAllocScheme @14 :Int64;
vpiConstantVariable @15 :Bool;
vpiIsRandomized @16 :Bool;
vpiRandType @17 :Int64;
vpiStructUnionMember @18 :Bool;
vpiScalar @19 :Bool;
vpiVisibility @20 :Int64;
vpiVector @21 :Bool;
ports @22 :List(ObjIndexType);
variabledrivers @23 :List(ObjIndexType);
variableloads @24 :List(ObjIndexType);
typespec @25 :ObjIndexType;
instance @26 :ObjIndexType;
scope @27 :ObjIndexType;
expr @28 :ObjIndexType;
indexes @29 :List(ObjIndexType);
primterms @30 :List(UInt64);
contassigns @31 :List(UInt64);
pathterm @32 :UInt64;
tchkterm @33 :UInt64;
module @34 :UInt64;
}
struct Logicvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
leftexpr @4 :ObjIndexType;
rightexpr @5 :ObjIndexType;
ranges @6 :List(UInt64);
varbits @7 :List(UInt64);
vpiArrayMember @8 :Bool;
vpiName @9 :UInt64;
vpiFullName @10 :UInt64;
vpiSigned @11 :Bool;
vpiSize @12 :Int64;
vpiAutomatic @13 :Bool;
vpiAllocScheme @14 :Int64;
vpiConstantVariable @15 :Bool;
vpiIsRandomized @16 :Bool;
vpiRandType @17 :Int64;
vpiStructUnionMember @18 :Bool;
vpiScalar @19 :Bool;
vpiVisibility @20 :Int64;
vpiVector @21 :Bool;
ports @22 :List(ObjIndexType);
variabledrivers @23 :List(ObjIndexType);
variableloads @24 :List(ObjIndexType);
typespec @25 :ObjIndexType;
instance @26 :ObjIndexType;
scope @27 :ObjIndexType;
expr @28 :ObjIndexType;
indexes @29 :List(ObjIndexType);
primterms @30 :List(UInt64);
contassigns @31 :List(UInt64);
pathterm @32 :UInt64;
tchkterm @33 :UInt64;
module @34 :UInt64;
}
struct Structvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
variables @4 :List(ObjIndexType);
varbits @5 :List(UInt64);
vpiArrayMember @6 :Bool;
vpiName @7 :UInt64;
vpiFullName @8 :UInt64;
vpiSigned @9 :Bool;
vpiSize @10 :Int64;
vpiAutomatic @11 :Bool;
vpiAllocScheme @12 :Int64;
vpiConstantVariable @13 :Bool;
vpiIsRandomized @14 :Bool;
vpiRandType @15 :Int64;
vpiStructUnionMember @16 :Bool;
vpiScalar @17 :Bool;
vpiVisibility @18 :Int64;
vpiVector @19 :Bool;
ports @20 :List(ObjIndexType);
variabledrivers @21 :List(ObjIndexType);
variableloads @22 :List(ObjIndexType);
typespec @23 :ObjIndexType;
instance @24 :ObjIndexType;
scope @25 :ObjIndexType;
expr @26 :ObjIndexType;
indexes @27 :List(ObjIndexType);
primterms @28 :List(UInt64);
contassigns @29 :List(UInt64);
pathterm @30 :UInt64;
tchkterm @31 :UInt64;
module @32 :UInt64;
}
struct Unionvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
variables @4 :List(ObjIndexType);
varbits @5 :List(UInt64);
vpiArrayMember @6 :Bool;
vpiName @7 :UInt64;
vpiFullName @8 :UInt64;
vpiSigned @9 :Bool;
vpiSize @10 :Int64;
vpiAutomatic @11 :Bool;
vpiAllocScheme @12 :Int64;
vpiConstantVariable @13 :Bool;
vpiIsRandomized @14 :Bool;
vpiRandType @15 :Int64;
vpiStructUnionMember @16 :Bool;
vpiScalar @17 :Bool;
vpiVisibility @18 :Int64;
vpiVector @19 :Bool;
ports @20 :List(ObjIndexType);
variabledrivers @21 :List(ObjIndexType);
variableloads @22 :List(ObjIndexType);
typespec @23 :ObjIndexType;
instance @24 :ObjIndexType;
scope @25 :ObjIndexType;
expr @26 :ObjIndexType;
indexes @27 :List(ObjIndexType);
primterms @28 :List(UInt64);
contassigns @29 :List(UInt64);
pathterm @30 :UInt64;
tchkterm @31 :UInt64;
module @32 :UInt64;
}
struct Enumvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Stringvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Chandlevar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Classvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiArrayMember @4 :Bool;
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiAutomatic @9 :Bool;
vpiAllocScheme @10 :Int64;
vpiConstantVariable @11 :Bool;
vpiIsRandomized @12 :Bool;
vpiRandType @13 :Int64;
vpiStructUnionMember @14 :Bool;
vpiScalar @15 :Bool;
vpiVisibility @16 :Int64;
vpiVector @17 :Bool;
ports @18 :List(ObjIndexType);
variabledrivers @19 :List(ObjIndexType);
variableloads @20 :List(ObjIndexType);
typespec @21 :ObjIndexType;
instance @22 :ObjIndexType;
scope @23 :ObjIndexType;
expr @24 :ObjIndexType;
indexes @25 :List(ObjIndexType);
primterms @26 :List(UInt64);
contassigns @27 :List(UInt64);
pathterm @28 :UInt64;
tchkterm @29 :UInt64;
module @30 :UInt64;
}
struct Varbit {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiConstantSelect @4 :Bool;
exprindex @5 :ObjIndexType;
exprindexes @6 :List(ObjIndexType);
vpiArrayMember @7 :Bool;
vpiName @8 :UInt64;
vpiFullName @9 :UInt64;
vpiSigned @10 :Bool;
vpiSize @11 :Int64;
vpiAutomatic @12 :Bool;
vpiAllocScheme @13 :Int64;
vpiConstantVariable @14 :Bool;
vpiIsRandomized @15 :Bool;
vpiRandType @16 :Int64;
vpiStructUnionMember @17 :Bool;
vpiScalar @18 :Bool;
vpiVisibility @19 :Int64;
vpiVector @20 :Bool;
ports @21 :List(ObjIndexType);
variabledrivers @22 :List(ObjIndexType);
variableloads @23 :List(ObjIndexType);
typespec @24 :ObjIndexType;
instance @25 :ObjIndexType;
scope @26 :ObjIndexType;
expr @27 :ObjIndexType;
indexes @28 :List(ObjIndexType);
primterms @29 :List(UInt64);
contassigns @30 :List(UInt64);
pathterm @31 :UInt64;
tchkterm @32 :UInt64;
module @33 :UInt64;
}
struct Task {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiMethod @4 :Bool;
vpiAccessType @5 :Int64;
vpiVisibility @6 :Int64;
vpiVirtual @7 :Bool;
vpiAutomatic @8 :Bool;
vpiDPIContext @9 :Bool;
vpiDPICStr @10 :Int64;
vpiDPICIdentifier @11 :UInt64;
leftexpr @12 :ObjIndexType;
rightexpr @13 :ObjIndexType;
stmt @14 :ObjIndexType;
classdefn @15 :UInt64;
refobj @16 :UInt64;
iodecl @17 :UInt64;
vpiName @18 :UInt64;
vpiFullName @19 :UInt64;
concurrentassertions @20 :List(ObjIndexType);
variables @21 :List(ObjIndexType);
parameters @22 :List(ObjIndexType);
scopes @23 :List(ObjIndexType);
typespecs @24 :List(ObjIndexType);
propertydecls @25 :List(UInt64);
sequencedecls @26 :List(UInt64);
namedevents @27 :List(UInt64);
namedeventarrays @28 :List(UInt64);
virtualinterfacevars @29 :List(UInt64);
logicvar @30 :List(UInt64);
arrayvar @31 :List(UInt64);
arrayvarmem @32 :List(UInt64);
letdecls @33 :List(UInt64);
instanceitems @34 :List(ObjIndexType);
}
struct Function {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiSigned @4 :Bool;
vpiSize @5 :Int64;
vpiFuncType @6 :Int64;
vpiMethod @7 :Bool;
vpiAccessType @8 :Int64;
vpiVisibility @9 :Int64;
vpiVirtual @10 :Bool;
vpiAutomatic @11 :Bool;
vpiDPIContext @12 :Bool;
vpiDPICStr @13 :Int64;
vpiDPICIdentifier @14 :UInt64;
leftexpr @15 :ObjIndexType;
rightexpr @16 :ObjIndexType;
stmt @17 :ObjIndexType;
classdefn @18 :UInt64;
refobj @19 :UInt64;
iodecl @20 :UInt64;
vpiName @21 :UInt64;
vpiFullName @22 :UInt64;
concurrentassertions @23 :List(ObjIndexType);
variables @24 :List(ObjIndexType);
parameters @25 :List(ObjIndexType);
scopes @26 :List(ObjIndexType);
typespecs @27 :List(ObjIndexType);
propertydecls @28 :List(UInt64);
sequencedecls @29 :List(UInt64);
namedevents @30 :List(UInt64);
namedeventarrays @31 :List(UInt64);
virtualinterfacevars @32 :List(UInt64);
logicvar @33 :List(UInt64);
arrayvar @34 :List(UInt64);
arrayvarmem @35 :List(UInt64);
letdecls @36 :List(UInt64);
instanceitems @37 :List(ObjIndexType);
}
struct Modport {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
iodecls @5 :List(UInt64);
interface @6 :UInt64;
}
struct Interfacetfdecl {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiAccessType @4 :UInt64;
tasks @5 :List(UInt64);
functions @6 :List(UInt64);
}
struct Contassign {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Port {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
bits @4 :List(UInt64);
vpiPortIndex @5 :UInt64;
vpiName @6 :UInt64;
vpiPortType @7 :UInt64;
vpiScalar @8 :Bool;
vpiVector @9 :Bool;
vpiConnByName @10 :Bool;
vpiDirection @11 :UInt64;
vpiSize @12 :UInt64;
vpiExplicitName @13 :UInt64;
typespecs @14 :ObjIndexType;
instance @15 :ObjIndexType;
module @16 :UInt64;
highconn @17 :ObjIndexType;
lowconn @18 :ObjIndexType;
}
struct Portbit {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiPortIndex @4 :UInt64;
vpiName @5 :UInt64;
vpiPortType @6 :UInt64;
vpiScalar @7 :Bool;
vpiVector @8 :Bool;
vpiConnByName @9 :Bool;
vpiDirection @10 :UInt64;
vpiSize @11 :UInt64;
vpiExplicitName @12 :UInt64;
typespecs @13 :ObjIndexType;
instance @14 :ObjIndexType;
module @15 :UInt64;
highconn @16 :ObjIndexType;
lowconn @17 :ObjIndexType;
}
struct Primitive {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Modpath {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Tchk {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Defparam {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Range {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Udpdefn {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Iodecl {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiDirection @4 :Int64;
vpiName @5 :UInt64;
vpiScalar @6 :Bool;
vpiSigned @7 :Bool;
vpiSize @8 :Int64;
vpiVector @9 :Bool;
leftexpr @10 :ObjIndexType;
rightexpr @11 :ObjIndexType;
typespecs @12 :ObjIndexType;
instance @13 :ObjIndexType;
taskfunc @14 :ObjIndexType;
ranges @15 :List(UInt64);
udpdefn @16 :UInt64;
module @17 :UInt64;
expr @18 :ObjIndexType;
}
struct Aliasstmt {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Clockingblock {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
concurrentassertions @6 :List(ObjIndexType);
variables @7 :List(ObjIndexType);
parameters @8 :List(ObjIndexType);
scopes @9 :List(ObjIndexType);
typespecs @10 :List(ObjIndexType);
propertydecls @11 :List(UInt64);
sequencedecls @12 :List(UInt64);
namedevents @13 :List(UInt64);
namedeventarrays @14 :List(UInt64);
virtualinterfacevars @15 :List(UInt64);
logicvar @16 :List(UInt64);
arrayvar @17 :List(UInt64);
arrayvarmem @18 :List(UInt64);
letdecls @19 :List(UInt64);
instanceitems @20 :List(ObjIndexType);
}
struct Paramassign {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Interfacearray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
paramassigns @4 :List(UInt64);
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSize @7 :Int64;
expr @8 :ObjIndexType;
leftexpr @9 :ObjIndexType;
rightexpr @10 :ObjIndexType;
instances @11 :List(ObjIndexType);
ranges @12 :List(UInt64);
modules @13 :List(UInt64);
}
struct Programarray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
vpiSize @6 :Int64;
expr @7 :ObjIndexType;
leftexpr @8 :ObjIndexType;
rightexpr @9 :ObjIndexType;
instances @10 :List(ObjIndexType);
ranges @11 :List(UInt64);
modules @12 :List(UInt64);
}
struct Modulearray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
paramassigns @4 :List(UInt64);
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSize @7 :Int64;
expr @8 :ObjIndexType;
leftexpr @9 :ObjIndexType;
rightexpr @10 :ObjIndexType;
instances @11 :List(ObjIndexType);
ranges @12 :List(UInt64);
modules @13 :List(UInt64);
}
struct Gatearray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
delay @4 :ObjIndexType;
primitives @5 :List(ObjIndexType);
vpiName @6 :UInt64;
vpiFullName @7 :UInt64;
vpiSize @8 :Int64;
expr @9 :ObjIndexType;
leftexpr @10 :ObjIndexType;
rightexpr @11 :ObjIndexType;
instances @12 :List(ObjIndexType);
ranges @13 :List(UInt64);
modules @14 :List(UInt64);
}
struct Switcharray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
delay @4 :ObjIndexType;
primitives @5 :List(ObjIndexType);
vpiName @6 :UInt64;
vpiFullName @7 :UInt64;
vpiSize @8 :Int64;
expr @9 :ObjIndexType;
leftexpr @10 :ObjIndexType;
rightexpr @11 :ObjIndexType;
instances @12 :List(ObjIndexType);
ranges @13 :List(UInt64);
modules @14 :List(UInt64);
}
struct Udparray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
delay @4 :ObjIndexType;
primitives @5 :List(ObjIndexType);
vpiName @6 :UInt64;
vpiFullName @7 :UInt64;
vpiSize @8 :Int64;
expr @9 :ObjIndexType;
leftexpr @10 :ObjIndexType;
rightexpr @11 :ObjIndexType;
instances @12 :List(ObjIndexType);
ranges @13 :List(UInt64);
modules @14 :List(UInt64);
}
struct Primterm {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Pathterm {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Tchkterm {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Netbit {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
expr @4 :List(ObjIndexType);
vpiArrayMember @5 :Bool;
vpiConstantSelect @6 :Bool;
vpiExpanded @7 :Bool;
vpiImplicitDecl @8 :Bool;
vpiName @9 :UInt64;
vpiFullName @10 :UInt64;
vpiNetDeclAssign @11 :Bool;
vpiNetType @12 :UInt64;
vpiResolvedNetType @13 :UInt64;
vpiScalar @14 :Bool;
vpiExplicitScalared @15 :Bool;
vpiSigned @16 :Bool;
vpiSize @17 :Int64;
vpiStrength0 @18 :Int64;
vpiStrength1 @19 :Int64;
vpiChargeStrength @20 :Int64;
vpiVector @21 :Bool;
vpiExplicitVectored @22 :Bool;
vpiStructUnionMember @23 :Bool;
ports @24 :List(ObjIndexType);
drivers @25 :List(ObjIndexType);
loads @26 :List(ObjIndexType);
localdrivers @27 :List(ObjIndexType);
localloads @28 :List(ObjIndexType);
simnets @29 :ObjIndexType;
typespec @30 :ObjIndexType;
primterms @31 :List(UInt64);
contassigns @32 :List(UInt64);
pathterm @33 :List(UInt64);
tchkterm @34 :List(UInt64);
module @35 :UInt64;
}
struct Structnet {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiPackedArrayMember @4 :Bool;
nets @5 :List(ObjIndexType);
expr @6 :List(ObjIndexType);
netbits @7 :List(UInt64);
vpiArrayMember @8 :Bool;
vpiConstantSelect @9 :Bool;
vpiExpanded @10 :Bool;
vpiImplicitDecl @11 :Bool;
vpiName @12 :UInt64;
vpiFullName @13 :UInt64;
vpiNetDeclAssign @14 :Bool;
vpiNetType @15 :UInt64;
vpiResolvedNetType @16 :UInt64;
vpiScalar @17 :Bool;
vpiExplicitScalared @18 :Bool;
vpiSigned @19 :Bool;
vpiSize @20 :Int64;
vpiStrength0 @21 :Int64;
vpiStrength1 @22 :Int64;
vpiChargeStrength @23 :Int64;
vpiVector @24 :Bool;
vpiExplicitVectored @25 :Bool;
vpiStructUnionMember @26 :Bool;
ports @27 :List(ObjIndexType);
drivers @28 :List(ObjIndexType);
loads @29 :List(ObjIndexType);
localdrivers @30 :List(ObjIndexType);
localloads @31 :List(ObjIndexType);
simnets @32 :ObjIndexType;
typespec @33 :ObjIndexType;
primterms @34 :List(UInt64);
contassigns @35 :List(UInt64);
pathterm @36 :List(UInt64);
tchkterm @37 :List(UInt64);
module @38 :UInt64;
}
struct Enumnet {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiPackedArrayMember @4 :Bool;
expr @5 :List(ObjIndexType);
netbits @6 :List(UInt64);
vpiArrayMember @7 :Bool;
vpiConstantSelect @8 :Bool;
vpiExpanded @9 :Bool;
vpiImplicitDecl @10 :Bool;
vpiName @11 :UInt64;
vpiFullName @12 :UInt64;
vpiNetDeclAssign @13 :Bool;
vpiNetType @14 :UInt64;
vpiResolvedNetType @15 :UInt64;
vpiScalar @16 :Bool;
vpiExplicitScalared @17 :Bool;
vpiSigned @18 :Bool;
vpiSize @19 :Int64;
vpiStrength0 @20 :Int64;
vpiStrength1 @21 :Int64;
vpiChargeStrength @22 :Int64;
vpiVector @23 :Bool;
vpiExplicitVectored @24 :Bool;
vpiStructUnionMember @25 :Bool;
ports @26 :List(ObjIndexType);
drivers @27 :List(ObjIndexType);
loads @28 :List(ObjIndexType);
localdrivers @29 :List(ObjIndexType);
localloads @30 :List(ObjIndexType);
simnets @31 :ObjIndexType;
typespec @32 :ObjIndexType;
primterms @33 :List(UInt64);
contassigns @34 :List(UInt64);
pathterm @35 :List(UInt64);
tchkterm @36 :List(UInt64);
module @37 :UInt64;
}
struct Integernet {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
netbits @4 :List(UInt64);
vpiArrayMember @5 :Bool;
vpiConstantSelect @6 :Bool;
vpiExpanded @7 :Bool;
vpiImplicitDecl @8 :Bool;
vpiName @9 :UInt64;
vpiFullName @10 :UInt64;
vpiNetDeclAssign @11 :Bool;
vpiNetType @12 :UInt64;
vpiResolvedNetType @13 :UInt64;
vpiScalar @14 :Bool;
vpiExplicitScalared @15 :Bool;
vpiSigned @16 :Bool;
vpiSize @17 :Int64;
vpiStrength0 @18 :Int64;
vpiStrength1 @19 :Int64;
vpiChargeStrength @20 :Int64;
vpiVector @21 :Bool;
vpiExplicitVectored @22 :Bool;
vpiStructUnionMember @23 :Bool;
ports @24 :List(ObjIndexType);
drivers @25 :List(ObjIndexType);
loads @26 :List(ObjIndexType);
localdrivers @27 :List(ObjIndexType);
localloads @28 :List(ObjIndexType);
simnets @29 :ObjIndexType;
typespec @30 :ObjIndexType;
primterms @31 :List(UInt64);
contassigns @32 :List(UInt64);
pathterm @33 :List(UInt64);
tchkterm @34 :List(UInt64);
module @35 :UInt64;
}
struct Timenet {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
netbits @4 :List(UInt64);
vpiArrayMember @5 :Bool;
vpiConstantSelect @6 :Bool;
vpiExpanded @7 :Bool;
vpiImplicitDecl @8 :Bool;
vpiName @9 :UInt64;
vpiFullName @10 :UInt64;
vpiNetDeclAssign @11 :Bool;
vpiNetType @12 :UInt64;
vpiResolvedNetType @13 :UInt64;
vpiScalar @14 :Bool;
vpiExplicitScalared @15 :Bool;
vpiSigned @16 :Bool;
vpiSize @17 :Int64;
vpiStrength0 @18 :Int64;
vpiStrength1 @19 :Int64;
vpiChargeStrength @20 :Int64;
vpiVector @21 :Bool;
vpiExplicitVectored @22 :Bool;
vpiStructUnionMember @23 :Bool;
ports @24 :List(ObjIndexType);
drivers @25 :List(ObjIndexType);
loads @26 :List(ObjIndexType);
localdrivers @27 :List(ObjIndexType);
localloads @28 :List(ObjIndexType);
simnets @29 :ObjIndexType;
typespec @30 :ObjIndexType;
primterms @31 :List(UInt64);
contassigns @32 :List(UInt64);
pathterm @33 :List(UInt64);
tchkterm @34 :List(UInt64);
module @35 :UInt64;
}
struct Logicnet {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
leftexpr @4 :ObjIndexType;
rightexpr @5 :ObjIndexType;
ranges @6 :List(UInt64);
netbits @7 :List(UInt64);
vpiArrayMember @8 :Bool;
vpiConstantSelect @9 :Bool;
vpiExpanded @10 :Bool;
vpiImplicitDecl @11 :Bool;
vpiName @12 :UInt64;
vpiFullName @13 :UInt64;
vpiNetDeclAssign @14 :Bool;
vpiNetType @15 :UInt64;
vpiResolvedNetType @16 :UInt64;
vpiScalar @17 :Bool;
vpiExplicitScalared @18 :Bool;
vpiSigned @19 :Bool;
vpiSize @20 :Int64;
vpiStrength0 @21 :Int64;
vpiStrength1 @22 :Int64;
vpiChargeStrength @23 :Int64;
vpiVector @24 :Bool;
vpiExplicitVectored @25 :Bool;
vpiStructUnionMember @26 :Bool;
ports @27 :List(ObjIndexType);
drivers @28 :List(ObjIndexType);
loads @29 :List(ObjIndexType);
localdrivers @30 :List(ObjIndexType);
localloads @31 :List(ObjIndexType);
simnets @32 :ObjIndexType;
typespec @33 :ObjIndexType;
primterms @34 :List(UInt64);
contassigns @35 :List(UInt64);
pathterm @36 :List(UInt64);
tchkterm @37 :List(UInt64);
module @38 :UInt64;
}
struct Arraynet {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
nets @4 :List(ObjIndexType);
range @5 :List(UInt64);
vpiArrayMember @6 :Bool;
vpiConstantSelect @7 :Bool;
vpiExpanded @8 :Bool;
vpiImplicitDecl @9 :Bool;
vpiName @10 :UInt64;
vpiFullName @11 :UInt64;
vpiNetDeclAssign @12 :Bool;
vpiNetType @13 :UInt64;
vpiResolvedNetType @14 :UInt64;
vpiScalar @15 :Bool;
vpiExplicitScalared @16 :Bool;
vpiSigned @17 :Bool;
vpiSize @18 :Int64;
vpiStrength0 @19 :Int64;
vpiStrength1 @20 :Int64;
vpiChargeStrength @21 :Int64;
vpiVector @22 :Bool;
vpiExplicitVectored @23 :Bool;
vpiStructUnionMember @24 :Bool;
ports @25 :List(ObjIndexType);
drivers @26 :List(ObjIndexType);
loads @27 :List(ObjIndexType);
localdrivers @28 :List(ObjIndexType);
localloads @29 :List(ObjIndexType);
simnets @30 :ObjIndexType;
typespec @31 :ObjIndexType;
primterms @32 :List(UInt64);
contassigns @33 :List(UInt64);
pathterm @34 :List(UInt64);
tchkterm @35 :List(UInt64);
module @36 :UInt64;
}
struct Packedarraynet {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiPackedArrayMember @4 :Bool;
leftexpr @5 :ObjIndexType;
rightexpr @6 :ObjIndexType;
expr @7 :List(ObjIndexType);
ranges @8 :List(UInt64);
elements @9 :List(ObjIndexType);
netbits @10 :List(UInt64);
vpiArrayMember @11 :Bool;
vpiConstantSelect @12 :Bool;
vpiExpanded @13 :Bool;
vpiImplicitDecl @14 :Bool;
vpiName @15 :UInt64;
vpiFullName @16 :UInt64;
vpiNetDeclAssign @17 :Bool;
vpiNetType @18 :UInt64;
vpiResolvedNetType @19 :UInt64;
vpiScalar @20 :Bool;
vpiExplicitScalared @21 :Bool;
vpiSigned @22 :Bool;
vpiSize @23 :Int64;
vpiStrength0 @24 :Int64;
vpiStrength1 @25 :Int64;
vpiChargeStrength @26 :Int64;
vpiVector @27 :Bool;
vpiExplicitVectored @28 :Bool;
vpiStructUnionMember @29 :Bool;
ports @30 :List(ObjIndexType);
drivers @31 :List(ObjIndexType);
loads @32 :List(ObjIndexType);
localdrivers @33 :List(ObjIndexType);
localloads @34 :List(ObjIndexType);
simnets @35 :ObjIndexType;
typespec @36 :ObjIndexType;
primterms @37 :List(UInt64);
contassigns @38 :List(UInt64);
pathterm @39 :List(UInt64);
tchkterm @40 :List(UInt64);
module @41 :UInt64;
}
struct Namedevent {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Namedeventarray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Specparam {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Classdefn {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
concurrentassertions @6 :List(ObjIndexType);
variables @7 :List(ObjIndexType);
parameters @8 :List(ObjIndexType);
scopes @9 :List(ObjIndexType);
typespecs @10 :List(ObjIndexType);
propertydecls @11 :List(UInt64);
sequencedecls @12 :List(UInt64);
namedevents @13 :List(UInt64);
namedeventarrays @14 :List(UInt64);
virtualinterfacevars @15 :List(UInt64);
logicvar @16 :List(UInt64);
arrayvar @17 :List(UInt64);
arrayvarmem @18 :List(UInt64);
letdecls @19 :List(UInt64);
instanceitems @20 :List(ObjIndexType);
}
struct Classtypespec {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
concurrentassertions @6 :List(ObjIndexType);
variables @7 :List(ObjIndexType);
parameters @8 :List(ObjIndexType);
scopes @9 :List(ObjIndexType);
typespecs @10 :List(ObjIndexType);
propertydecls @11 :List(UInt64);
sequencedecls @12 :List(UInt64);
namedevents @13 :List(UInt64);
namedeventarrays @14 :List(UInt64);
virtualinterfacevars @15 :List(UInt64);
logicvar @16 :List(UInt64);
arrayvar @17 :List(UInt64);
arrayvarmem @18 :List(UInt64);
letdecls @19 :List(UInt64);
instanceitems @20 :List(ObjIndexType);
}
struct Classobj {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
concurrentassertions @6 :List(ObjIndexType);
variables @7 :List(ObjIndexType);
parameters @8 :List(ObjIndexType);
scopes @9 :List(ObjIndexType);
typespecs @10 :List(ObjIndexType);
propertydecls @11 :List(UInt64);
sequencedecls @12 :List(UInt64);
namedevents @13 :List(UInt64);
namedeventarrays @14 :List(UInt64);
virtualinterfacevars @15 :List(UInt64);
logicvar @16 :List(UInt64);
arrayvar @17 :List(UInt64);
arrayvarmem @18 :List(UInt64);
letdecls @19 :List(UInt64);
instanceitems @20 :List(ObjIndexType);
}
struct Interface {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiIndex @4 :UInt64;
exprdist @5 :ObjIndexType;
instancearray @6 :ObjIndexType;
process @7 :List(ObjIndexType);
interfacetfdecls @8 :List(UInt64);
modports @9 :List(UInt64);
globalclocking @10 :UInt64;
defaultclocking @11 :UInt64;
modpaths @12 :List(UInt64);
contassigns @13 :List(UInt64);
interfaces @14 :List(UInt64);
interfacearrays @15 :List(UInt64);
vpiDefName @16 :UInt64;
vpiArrayMember @17 :Bool;
vpiCellInstance @18 :Bool;
vpiDefNetType @19 :Int64;
vpiDefFile @20 :UInt64;
vpiDefDelayMode @21 :Int64;
vpiProtected @22 :Bool;
vpiTimePrecision @23 :Int64;
vpiTimeUnit @24 :Int64;
vpiUnconnDrive @25 :Int64;
vpiLibrary @26 :UInt64;
vpiCell @27 :UInt64;
vpiConfig @28 :UInt64;
vpiAutomatic @29 :Bool;
vpiTop @30 :Bool;
taskfunc @31 :List(ObjIndexType);
net @32 :List(ObjIndexType);
arraynet @33 :List(ObjIndexType);
assertion @34 :List(ObjIndexType);
classdefn @35 :List(ObjIndexType);
instance @36 :ObjIndexType;
programs @37 :List(UInt64);
programarrays @38 :List(UInt64);
namedevent @39 :List(UInt64);
namedeventarray @40 :List(UInt64);
specparam @41 :List(UInt64);
module @42 :UInt64;
vpiName @43 :UInt64;
vpiFullName @44 :UInt64;
concurrentassertions @45 :List(ObjIndexType);
variables @46 :List(ObjIndexType);
parameters @47 :List(ObjIndexType);
scopes @48 :List(ObjIndexType);
typespecs @49 :List(ObjIndexType);
propertydecls @50 :List(UInt64);
sequencedecls @51 :List(UInt64);
namedevents @52 :List(UInt64);
namedeventarrays @53 :List(UInt64);
virtualinterfacevars @54 :List(UInt64);
logicvar @55 :List(UInt64);
arrayvar @56 :List(UInt64);
arrayvarmem @57 :List(UInt64);
letdecls @58 :List(UInt64);
instanceitems @59 :List(ObjIndexType);
}
struct Program {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiIndex @4 :UInt64;
instancearray @5 :ObjIndexType;
exprdist @6 :ObjIndexType;
process @7 :List(ObjIndexType);
defaultclocking @8 :UInt64;
interfaces @9 :List(UInt64);
interfacearrays @10 :List(UInt64);
contassigns @11 :List(UInt64);
clockingblocks @12 :List(UInt64);
vpiDefName @13 :UInt64;
vpiArrayMember @14 :Bool;
vpiCellInstance @15 :Bool;
vpiDefNetType @16 :Int64;
vpiDefFile @17 :UInt64;
vpiDefDelayMode @18 :Int64;
vpiProtected @19 :Bool;
vpiTimePrecision @20 :Int64;
vpiTimeUnit @21 :Int64;
vpiUnconnDrive @22 :Int64;
vpiLibrary @23 :UInt64;
vpiCell @24 :UInt64;
vpiConfig @25 :UInt64;
vpiAutomatic @26 :Bool;
vpiTop @27 :Bool;
taskfunc @28 :List(ObjIndexType);
net @29 :List(ObjIndexType);
arraynet @30 :List(ObjIndexType);
assertion @31 :List(ObjIndexType);
classdefn @32 :List(ObjIndexType);
instance @33 :ObjIndexType;
programs @34 :List(UInt64);
programarrays @35 :List(UInt64);
namedevent @36 :List(UInt64);
namedeventarray @37 :List(UInt64);
specparam @38 :List(UInt64);
module @39 :UInt64;
vpiName @40 :UInt64;
vpiFullName @41 :UInt64;
concurrentassertions @42 :List(ObjIndexType);
variables @43 :List(ObjIndexType);
parameters @44 :List(ObjIndexType);
scopes @45 :List(ObjIndexType);
typespecs @46 :List(ObjIndexType);
propertydecls @47 :List(UInt64);
sequencedecls @48 :List(UInt64);
namedevents @49 :List(UInt64);
namedeventarrays @50 :List(UInt64);
virtualinterfacevars @51 :List(UInt64);
logicvar @52 :List(UInt64);
arrayvar @53 :List(UInt64);
arrayvarmem @54 :List(UInt64);
letdecls @55 :List(UInt64);
instanceitems @56 :List(ObjIndexType);
}
struct Package {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiUnit @4 :Bool;
vpiDefName @5 :UInt64;
vpiArrayMember @6 :Bool;
vpiCellInstance @7 :Bool;
vpiDefNetType @8 :Int64;
vpiDefFile @9 :UInt64;
vpiDefDelayMode @10 :Int64;
vpiProtected @11 :Bool;
vpiTimePrecision @12 :Int64;
vpiTimeUnit @13 :Int64;
vpiUnconnDrive @14 :Int64;
vpiLibrary @15 :UInt64;
vpiCell @16 :UInt64;
vpiConfig @17 :UInt64;
vpiAutomatic @18 :Bool;
vpiTop @19 :Bool;
taskfunc @20 :List(ObjIndexType);
net @21 :List(ObjIndexType);
arraynet @22 :List(ObjIndexType);
assertion @23 :List(ObjIndexType);
classdefn @24 :List(ObjIndexType);
instance @25 :ObjIndexType;
programs @26 :List(UInt64);
programarrays @27 :List(UInt64);
namedevent @28 :List(UInt64);
namedeventarray @29 :List(UInt64);
specparam @30 :List(UInt64);
module @31 :UInt64;
vpiName @32 :UInt64;
vpiFullName @33 :UInt64;
concurrentassertions @34 :List(ObjIndexType);
variables @35 :List(ObjIndexType);
parameters @36 :List(ObjIndexType);
scopes @37 :List(ObjIndexType);
typespecs @38 :List(ObjIndexType);
propertydecls @39 :List(UInt64);
sequencedecls @40 :List(UInt64);
namedevents @41 :List(UInt64);
namedeventarrays @42 :List(UInt64);
virtualinterfacevars @43 :List(UInt64);
logicvar @44 :List(UInt64);
arrayvar @45 :List(UInt64);
arrayvarmem @46 :List(UInt64);
letdecls @47 :List(UInt64);
instanceitems @48 :List(ObjIndexType);
}
struct Module {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiIndex @4 :UInt64;
vpiTopModule @5 :Bool;
vpiDefDecayTime @6 :Int64;
exprdist @7 :ObjIndexType;
instancearray @8 :ObjIndexType;
process @9 :List(ObjIndexType);
primitives @10 :List(ObjIndexType);
primitivearrays @11 :List(ObjIndexType);
globalclocking @12 :UInt64;
defaultclocking @13 :UInt64;
modulearray @14 :UInt64;
ports @15 :List(UInt64);
interfaces @16 :List(UInt64);
interfacearrays @17 :List(UInt64);
contassigns @18 :List(UInt64);
modules @19 :List(UInt64);
modulearrays @20 :List(UInt64);
modpaths @21 :List(UInt64);
tchks @22 :List(UInt64);
defparams @23 :List(UInt64);
iodecls @24 :List(UInt64);
aliasstmts @25 :List(UInt64);
clockingblocks @26 :List(UInt64);
vpiDefName @27 :UInt64;
vpiArrayMember @28 :Bool;
vpiCellInstance @29 :Bool;
vpiDefNetType @30 :Int64;
vpiDefFile @31 :UInt64;
vpiDefDelayMode @32 :Int64;
vpiProtected @33 :Bool;
vpiTimePrecision @34 :Int64;
vpiTimeUnit @35 :Int64;
vpiUnconnDrive @36 :Int64;
vpiLibrary @37 :UInt64;
vpiCell @38 :UInt64;
vpiConfig @39 :UInt64;
vpiAutomatic @40 :Bool;
vpiTop @41 :Bool;
taskfunc @42 :List(ObjIndexType);
net @43 :List(ObjIndexType);
arraynet @44 :List(ObjIndexType);
assertion @45 :List(ObjIndexType);
classdefn @46 :List(ObjIndexType);
instance @47 :ObjIndexType;
programs @48 :List(UInt64);
programarrays @49 :List(UInt64);
namedevent @50 :List(UInt64);
namedeventarray @51 :List(UInt64);
specparam @52 :List(UInt64);
module @53 :UInt64;
vpiName @54 :UInt64;
vpiFullName @55 :UInt64;
concurrentassertions @56 :List(ObjIndexType);
variables @57 :List(ObjIndexType);
parameters @58 :List(ObjIndexType);
scopes @59 :List(ObjIndexType);
typespecs @60 :List(ObjIndexType);
propertydecls @61 :List(UInt64);
sequencedecls @62 :List(UInt64);
namedevents @63 :List(UInt64);
namedeventarrays @64 :List(UInt64);
virtualinterfacevars @65 :List(UInt64);
logicvar @66 :List(UInt64);
arrayvar @67 :List(UInt64);
arrayvarmem @68 :List(UInt64);
letdecls @69 :List(UInt64);
instanceitems @70 :List(ObjIndexType);
}
struct Design {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
allModules @5 :List(UInt64);
topModules @6 :List(UInt64);
allPrograms @7 :List(UInt64);
allPackages @8 :List(UInt64);
}



